name: Build and Deploy

on:
  workflow_call:
    inputs:
      nexus_username:
        description: "Nexus username"
        required: true
        type: string
      nexus_password:
        description: "Nexus password"
        required: true
        type: string
      nexus_url:
        description: "Nexus URL"
        required: true
        type: string
      docker_nexus_domain:
        description: "Docker Nexus domain"
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      NEXUS_USERNAME: ${{ inputs.nexus_username }}
      NEXUS_PASSWORD: ${{ inputs.nexus_password }}
      NEXUS_URL: ${{ inputs.nexus_url }}
      DOCKER_NEXUS_DOMAIN: ${{ inputs.docker_nexus_domain }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Decode and validate Maven settings
        run: |
          echo "Using Nexus URL: $NEXUS_URL"
          echo "Docker Nexus Domain: $DOCKER_NEXUS_DOMAIN"


      # Étape 2: Récupérer et valider settings.xml
      - name: Decode and validate Maven settings
        env:
          MAVEN_SETTINGS: ${{ vars.MAVEN_SETTINGS }}
        run: |
          echo "$MAVEN_SETTINGS" | base64 --decode > ~/.m2/settings.xml
          cat ~/.m2/settings.xml

      # Étape 3: Mettre en cache les dépendances Maven
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '~/.m2/settings.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # Étape 4: Tester l'authentification Nexus
      - name: Test Nexus Authentication
        run: |
          curl -u ${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }} \
          ${{ vars.NEXUS_URL }}/repository/maven-snapshots/

      #Etape 5: Construire l'artifact
      - name: Build with Maven
        run: mvn clean install -Denv.NEXUS_USERNAME=$NEXUS_USERNAME -Denv.NEXUS_PASSWORD=$NEXUS_PASSWORD -Denv.NEXUS_URL=$NEXUS_URL

      #Etape 6: Deployer sur le serveur distant
      - name: Deploy Artifact to Nexus
        run: mvn deploy